{"version":3,"sources":["adapters/documents.tsx","modules/Auth/constants/index.js","modules/Users/index.js","helpers/index.js","redux/config/helpers.js","redux/store/helpers.js","redux/store/reducers.js","redux/store/sagas.js","redux/config/store.js","redux/store/index.js","modules/Main/actions/index.js","modules/Main/constants/index.js","modules/Main/selectors/index.js","modules/Auth/actions/index.js","modules/Auth/selectors/index.js","modules/Users/actions/index.js","modules/Users/constants/index.js","modules/Users/sagas/index.js","modules/Users/selectors/index.js","modules/Documents/actions/index.js","modules/Documents/constants/index.js","modules/Documents/sagas/index.js","modules/Documents/selectors/index.js","modules/Main/reducers/list.js","modules/Main/reducers/add.js","modules/Main/reducers/index.js","modules/Users/reducers/list.js","modules/Users/reducers/user.js","modules/Users/reducers/index.js","modules/Documents/reducers/list.js","modules/Documents/reducers/listById.js","modules/Documents/reducers/index.js","modules/Auth/reducers/user.js","modules/Auth/reducers/index.js","adapters/main.tsx","modules/Main/sagas/index.js","modules/Main/index.js","modules/Documents/index.js","modules sync /index.js$","adapters/helpers.js","components/documents/table.tsx","components/students/add.tsx","components/students/image-popup.tsx","components/students/table.js","components/main/index.tsx","adapters/chat.tsx","components/chat/table.tsx","components/chat/index.tsx","components/documents/image-popup.tsx","components/documents/styles.js","components/documents/index.tsx","components/documents/listById.tsx","components/documents/user.tsx","static/images/circleOrange.svg","static/images/circleGreen.svg","static/images/circleBlue.svg","components/SignIn/styles.js","components/SignIn/index.tsx","components/SignOut/index.tsx","components/Header/index.tsx","components/Footer/index.tsx","components/index.tsx","App.tsx","reportWebVitals.ts","index.tsx","modules/Auth/index.js","adapters/users.tsx"],"names":["Status","COLLECTION","firestore","collection","useMessagesStream","query","where","Pending","useCollectionData","idField","takeDocumentsWithFilters","userId","status","get","then","r","docs","catch","console","log","takeDocuments","handleApprove","data","doc","id","update","Approved","handleRemove","Rejected","ADD","REMOVE","moduleName","getAction","type","payload","getProp","fn","defaultValue","val","isBoolean","isString","isArray","isObject","err","formatDate","d","f","tmpDate","Date","isValid","format","getAllModules","requireContextModules","keys","map","key","filter","module","getAllModuleReducers","reducer","reduce","state","getAllModuleSagas","saga","getRequireContextModules","require","releaseBasedReducers","storeHelpers","combineReducers","firebase","firebaseReducer","rootSaga","all","sagas","decentralizedSagas","spawn","call","rootReducer","mySaga","reduxDevTools","sagaMiddleware","createSagaMiddleware","persistConfig","storage","whitelist","persistedReducer","persistReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","trace","compose","store","createStore","applyMiddleware","persistor","persistStore","run","baseStore","process","request","action","constants","LIST_REQUESTED","success","response","LIST_SUCCEEDED","failure","message","LIST_FAILED","add","ADD_REQUESTED","ADD_SUCCEEDED","ADD_FAILED","remove","REMOVE_REQUESTED","REMOVE_SUCCEEDED","REMOVE_FAILED","selectList","createSelector","list","user","selectUser","params","getUserById","GET_USER_BY_ID_REQUESTED","GET_USER_BY_ID_SUCCEEDED","GET_USER_BY_ID_FAILED","prev","PREV_LIST_REQUESTED","PREV_LIST_SUCCEEDED","PREV_LIST_FAILED","next","NEXT_LIST_REQUESTED","NEXT_LIST_SUCCEEDED","NEXT_LIST_FAILED","getList","callPrev","callNext","take","limit","filterStr","querySnapshot","forEach","snapshot","push","put","actions","first","uniqBy","last","takeUserById","takeLatest","mainSelectors","selectListData","selectUserById","listById","LIST_BY_ID_REQUESTED","LIST_BY_ID_SUCCEEDED","LIST_BY_ID_FAILED","getListById","mainSelector","selectListOfDocumentsById","selectListOfDocuments","initialState","statuses","isStarted","isPending","isFinished","isFailed","isSucceed","error","conf","persistentReducer","reducers","FILM_COLLECTION","addFilm","film","set","getFilms","a","orderBy","removeFilm","delete","addElement","addDate","getTime","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","Object","resolve","exports","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","database","AddModal","student","callTake","Form","useForm","form","isEdit","useMemo","Boolean","useState","visible","setVisible","file","setFile","useEffect","setFieldsValue","name","idNumber","no","campus","email","birth","moment","useCallback","toString","createdAt","addUserWithEmail","usr","omitArr","updateStudent","omit","title","placement","onClick","EditTwoTone","twoToneColor","FileAddTwoTone","centered","onOk","validateFields","values","onCreate","resetFields","info","onCancel","width","labelCol","span","wrapperCol","layout","Item","label","Option","value","disabled","onChange","files","target","Img","styled","img","ImagePopup","children","row","content","src","alt","StyledTable","Table","Centered","div","generateTagColor","tag","size","StudentsTable","dispatch","useDispatch","page","setPage","rows","useSelector","selectors","dataIndex","order","setOrder","setInfo","searchText","setSearchText","searchedColumn","setSearchedColumn","handleSearch","selectedKeys","confirm","handleReset","clearFilters","handleDelete","columns","render","_","filterDropdown","setSelectedKeys","style","padding","placeholder","onPressEnter","marginBottom","display","icon","SearchOutlined","closeDropdown","filterIcon","filtered","color","undefined","onFilter","record","toLowerCase","includes","text","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","sorter","b","getDate","sortOrder","ellipsis","onConfirm","DeleteTwoTone","dataSource","pagination","filters","field","el","LeftOutlined","length","totalSize","RightOutlined","Title","Typography","StyledTitle","Index","authSelectors","className","level","role","CustomList","ref","List","TableComponent","removeMessage","uid","forScroll","useRef","current","scrollIntoView","behavior","itemLayout","footer","renderItem","item","Meta","avatar","photo","description","Container","InputDiv","photoURL","displayName","notification","focus","Search","allowClear","enterButton","onSearch","username","date","withLink","history","useHistory","href","HeartTwoTone","onRow","index","onDoubleClick","rowClassName","renderColor","TabPane","Tabs","setStatus","tabBarStyle","tab","FlexDiv","Username","useParams","StyledDiv","StyledForm","CircleGreenDiv","CircleBlueDiv","Orange","CircleOrangeDiv","Div","StyledInput","Input","StyledButton","Button","SignIn","onFinish","signInWithEmailAndPassword","password","initialValues","remember","rules","required","prefix","UserOutlined","LockOutlined","block","htmlType","Green","Blue","SignOut","signOut","LogoutOutlined","StyledSearch","HeaderContainer","Actions","LeftSide","Span","Header","pathname","useLocation","renderType","pendings","to","ghost","HomeOutlined","ProfileOutlined","count","NotificationOutlined","FooterContainer","A","fontSize","position","top","Components","onAuthStateChanged","tmpUser","providerData","readUserById","path","exact","component","Documents","ListById","Chat","Footer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","startAfter","endBefore","limitToLast","trimmed","trim","Promise","B","C","D","createUserWithEmailAndPassword","child","getDownloadURL","url","userOBJ","savedUsr"],"mappings":"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","file":"static/js/main.d3280891.chunk.js","sourcesContent":["import {firestore} from \"./helpers\"\nimport {useCollectionData} from 'react-firebase-hooks/firestore';\nconst COLLECTION = firestore.collection(\"documents\")\n\nexport const messages = () => {\n    return COLLECTION\n}\nexport const removeMessage = (id: string) => {\n    return COLLECTION.doc(id).delete()\n}\n\nenum Status {\n    Pending = 'Pending',\n    Approved = 'Approved',\n    Rejected = 'Rejected',\n}\n\ninterface DataType {\n    userId: string,\n    username: string,\n    file: any,\n    desc: string,\n    createdAt: number\n}\n\nexport const useMessagesStream = () => {\n    const query = COLLECTION.where(\"status\", \"==\", Status.Pending);\n    return useCollectionData<DataType>(query, {idField: 'id'})[0]\n}\n\nexport const takeDocumentsWithFilters = (userId: string = '', status: string) => {\n    let query = COLLECTION.where('userId', '==', userId)\n    if (status){\n        query = query.where(\"status\", \"==\", status)\n    }\n    return query.get().then((r) => r.docs).catch(() => console.log('ერორი'))\n}\n\nexport const takeDocuments = (status: string) => {\n    if (status){\n        return COLLECTION.where(\"status\", \"==\", status).get().then((r) => r.docs).catch(() => console.log('ერორი'))\n    }\n    return COLLECTION.get().then((r) => r.docs).catch(() => console.log('ერორი'))\n}\n\n\n\n\ninterface SendDataTypes  {\n    id: string,\n    text: string,\n    photo: string,\n    createdAt: number,\n    user: string,\n    status: Status,\n}\n\nexport const sendMessage = (data: SendDataTypes) => COLLECTION.add(data)\nexport const handleApprove = (data: SendDataTypes) => {\n    console.log(data, 'handleApprove')\n    let prod = COLLECTION.doc(data.id)\n    return prod.update({\n        ...data,\n        status: Status.Approved\n    })\n}\nexport const handleRemove = (data: SendDataTypes) => {\n    console.log(data, 'handleRemove')\n    let prod = COLLECTION.doc(data.id)\n    return prod.update({\n        ...data,\n        status: Status.Rejected\n    })\n}\n\n","export const ADD = 'AUTH/ADD'\nexport const REMOVE = 'AUTH/REMOVE'\n","import * as actions from './actions'\nimport * as constants from './constants'\nimport reducer from './reducers'\nimport saga from './sagas'\nimport * as selectors from './selectors'\nconst moduleName = 'Users'\n\nexport {\n  moduleName,\n  reducer,\n  actions,\n  selectors,\n  constants,\n  saga\n}\n","import {\n    isBoolean,\n    isString,\n    isArray,\n    isObject\n} from 'lodash'\nimport {format, isValid} from \"date-fns\";\n\nexport const getAction = (type, payload = {}) =>\n    ({\n        type,\n        payload\n    })\n\n// https://stackoverflow.com/a/42349521\nexport const getProp = (fn, defaultValue) => {\n    try {\n        const val = fn()\n        if (isBoolean(defaultValue) && !isBoolean(val)) {\n            return defaultValue\n        }\n        if (isString(defaultValue) && !isString(val)) {\n            return defaultValue\n        }\n        if (isArray(defaultValue) && !isArray(val)) {\n            return defaultValue\n        }\n        if (isObject(defaultValue) && !isObject(val)) {\n            return defaultValue\n        }\n        return val || defaultValue\n    } catch (err) {\n        return defaultValue\n    }\n}\n\nexport const formatDate = (d, f) => {\n    const tmpDate = new Date(d)\n    if (isValid(tmpDate)) {\n        return format(tmpDate, f)\n    }\n    return 'undefined'\n}\n","\nconst allModules = (r) => r.keys().map((key) => r(key))\n\nexport const getAllModules = (requireContextModules) => {\n    const modules = allModules(requireContextModules)\n\n    return modules.filter((module) => module.moduleName)\n}\n\nexport const getAllModuleReducers = (requireContextModules) => {\n    const buildReducer = (state, module) => ({\n        ...state,\n        [module.moduleName]: module.reducer\n    })\n\n    const moduleReducers = getAllModules(requireContextModules, true)\n        .filter((module) => module.reducer)\n        .reduce(buildReducer, {})\n\n    return moduleReducers\n}\n\nexport const getAllModuleSagas = (requireContextModules) => {\n    const buildSaga = (module) =>\n        module.saga\n\n    const moduleSagas = getAllModules(requireContextModules, false)\n        .filter((module) => module.saga)\n        .map(buildSaga)\n\n    return moduleSagas\n}\n","\nexport const getRequireContextModules = () =>\n    require.context('../../modules/', true, /index.js$/)\n\nexport const getStore = () => {\n    const { store } = require('../store')\n    return {\n        state: store.getState(),\n        dispatch: store.dispatch\n    }\n}\n","import { combineReducers } from 'redux'\nimport { helpers as storeHelpers } from '../config'\nimport { getRequireContextModules } from './helpers'\nimport { firebaseReducer } from 'react-redux-firebase'\n\n\nconst releaseBasedReducers = storeHelpers\n  .getAllModuleReducers(getRequireContextModules())\n\nexport default combineReducers({\n  firebase: firebaseReducer,\n  ...releaseBasedReducers\n})\n","import { all, spawn, call } from 'redux-saga/effects'\nimport { helpers as storeHelpers } from '../config'\nimport { getRequireContextModules } from './helpers'\nfunction * rootSaga () {\n  yield all(storeHelpers.getAllModuleSagas(getRequireContextModules()))\n  const sagas = storeHelpers\n    .getAllModuleSagas(getRequireContextModules())\n  /*\n   * Keeping the root alive\n   * ref: https://redux-saga.js.org/docs/advanced/RootSaga.html\n   */\n  const decentralizedSagas = sagas.map((saga) =>\n    spawn(function * () {\n      while (true) {\n        try {\n          yield call(saga)\n          break\n        } catch (e) {\n          // eslint-disable-next-line no-console\n          console.log(e, 'Saga crash detected')\n        }\n      }\n    })\n  )\n  yield all(decentralizedSagas)\n}\nexport default rootSaga\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport createSagaMiddleware from 'redux-saga'\nimport storage from 'redux-persist/lib/storage'\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default (rootReducer, mySaga, { reduxDevTools = false } = {}) => {\n    const sagaMiddleware = createSagaMiddleware()\n    const persistConfig = {\n        key: 'root',\n        storage,\n        whitelist: []\n    }\n    const persistedReducer = persistReducer(persistConfig, rootReducer)\n    const composeEnhancers =\n        (reduxDevTools && typeof window !== 'undefined' &&\n            (\n                window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n                window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n                    trace: true\n                })\n            )\n        ) || compose\n\n    const store = createStore(persistedReducer, composeEnhancers(applyMiddleware(sagaMiddleware)))\n    const persistor = persistStore(store)\n    sagaMiddleware.run(mySaga)\n    return {\n        store,\n        persistor\n    }\n}\n","import { store as baseStore } from '../config'\nimport rootReducer from './reducers'\nimport sagas from './sagas'\n\nexport const { store, persistor } = baseStore(rootReducer, sagas, {\n  reduxDevTools: process.env.REACT_APP_REDUX_DEVTOOLS\n})\n","import {constants} from '../index'\nimport {getAction as action} from '../../../helpers'\n\nexport const get = ({\n    request: () => action(constants.LIST_REQUESTED),\n    success: (response) =>\n        action(constants.LIST_SUCCEEDED, {response}),\n    failure: (response, message) =>\n        action(constants.LIST_FAILED, {\n            response,\n            message\n        })\n})\n\nexport const add = ({\n    request: (data) =>\n        action(constants.ADD_REQUESTED, {data}),\n    success: () =>\n        action(constants.ADD_SUCCEEDED),\n    failure: (response, message) =>\n        action(constants.ADD_FAILED, {\n            response,\n            message\n        })\n})\n\nexport const remove = ({\n    request: (id) =>\n        action(constants.REMOVE_REQUESTED, {id}),\n    success: () =>\n        action(constants.REMOVE_SUCCEEDED),\n    failure: (response, message) =>\n        action(constants.REMOVE_FAILED, {\n            response,\n            message\n        })\n})\n","export const LIST_REQUESTED = 'MAIN/LIST_REQUESTED'\nexport const LIST_SUCCEEDED = 'MAIN/LIST_SUCCEEDED'\nexport const LIST_FAILED = 'MAIN/LIST_FAILED'\n\nexport const ADD_REQUESTED = 'MAIN/ADD_REQUESTED'\nexport const ADD_SUCCEEDED = 'MAIN/ADD_SUCCEEDED'\nexport const ADD_FAILED = 'MAIN/ADD_FAILED'\n\nexport const REMOVE_REQUESTED = 'MAIN/REMOVE_REQUESTED'\nexport const REMOVE_SUCCEEDED = 'MAIN/REMOVE_SUCCEEDED'\nexport const REMOVE_FAILED = 'MAIN/REMOVE_FAILED'\n","\nimport { createSelector } from 'reselect'\nimport { moduleName } from '../index'\n\nexport const selectList = createSelector(\n  (state) => state[moduleName],\n  (data) => data.list\n)\n","import {constants} from '../index'\nimport {getAction as action} from '../../../helpers'\n\nexport const user = ({\n    add: (user) => {\n        if (user) {\n            return action(constants.ADD, {\n                user\n            })\n        }\n    },\n    remove: () => action(constants.REMOVE),\n})\n\n","\nimport { createSelector } from 'reselect'\nimport { moduleName } from '../index'\n\nexport const selectUser = createSelector(\n  (state) => state[moduleName],\n  (data) => data.user.user\n)\n","import {constants} from '../index'\nimport {getAction as action} from '../../../helpers'\n\nexport const get = ({\n    request: (params) => action(constants.LIST_REQUESTED, params),\n    success: (response) =>\n        action(constants.LIST_SUCCEEDED, {response}),\n    failure: (response, message) =>\n        action(constants.LIST_FAILED, {\n            response,\n            message\n        })\n})\n\nexport const getUserById = ({\n    request: (id) => action(constants.GET_USER_BY_ID_REQUESTED, {id}),\n    success: (user) =>\n        action(constants.GET_USER_BY_ID_SUCCEEDED, {user}),\n    failure: (response, message) =>\n        action(constants.GET_USER_BY_ID_FAILED, {\n            response,\n            message\n        })\n})\n\nexport const prev = ({\n    request: (params) => action(constants.PREV_LIST_REQUESTED, params),\n    success: (response) =>\n        action(constants.PREV_LIST_SUCCEEDED, {response}),\n    failure: (response, message) =>\n        action(constants.PREV_LIST_FAILED, {\n            response,\n            message\n        })\n})\n\nexport const next = ({\n    request: (params) => action(constants.NEXT_LIST_REQUESTED, params),\n    success: (response) =>\n        action(constants.NEXT_LIST_SUCCEEDED, {response}),\n    failure: (response, message) =>\n        action(constants.NEXT_LIST_FAILED, {\n            response,\n            message\n        })\n})\n","export const LIST_REQUESTED = 'USERS/LIST_REQUESTED'\nexport const LIST_SUCCEEDED = 'USERS/LIST_SUCCEEDED'\nexport const LIST_FAILED = 'USERS/LIST_FAILED'\n\nexport const PREV_LIST_REQUESTED = 'USERS/PREV_LIST_REQUESTED'\nexport const PREV_LIST_SUCCEEDED = 'USERS/PREV_LIST_SUCCEEDED'\nexport const PREV_LIST_FAILED = 'USERS/PREV_LIST_FAILED'\n\nexport const NEXT_LIST_REQUESTED = 'USERS/NEXT_LIST_REQUESTED'\nexport const NEXT_LIST_SUCCEEDED = 'USERS/NEXT_LIST_SUCCEEDED'\nexport const NEXT_LIST_FAILED = 'USERS/NEXT_LIST_FAILED'\n\nexport const GET_USER_BY_ID_REQUESTED = 'USERS/GET_USER_BY_ID_REQUESTED'\nexport const GET_USER_BY_ID_SUCCEEDED = 'USERS/GET_USER_BY_ID_SUCCEEDED'\nexport const GET_USER_BY_ID_FAILED = 'USERS/GET_USER_BY_ID_FAILED'\n","import {call, put, takeLatest} from 'redux-saga/effects'\nimport {actions, constants} from '../index'\nimport {take, prev, next, takeUserById} from '../../../adapters/users'\nimport {uniqBy} from 'lodash'\nexport function* getList(action) {\n    try {\n        const querySnapshot = yield call(take, action.payload.limit, action.payload.filterStr)\n        const data = []\n        querySnapshot.forEach((snapshot) => {\n            data.push(snapshot.data())\n        })\n        yield put(actions.get.success({\n            data\n        }))\n    } catch (e) {\n        const {response, message} = e\n        yield put(actions.get.failure(response, message))\n    }\n}\n\nexport function* callPrev(action) {\n    try {\n        const querySnapshot = yield call(prev, action.payload.limit, action.payload.first)\n        const data = []\n        querySnapshot.forEach((snapshot) => {\n            data.push(snapshot.data())\n        })\n        yield put(actions.prev.success({\n            data: uniqBy(data, 'uid')\n        }))\n    } catch (e) {\n        const {response, message} = e\n        yield put(actions.prev.failure(response, message))\n    }\n}\n\nexport function* callNext(action) {\n    try {\n        const querySnapshot = yield call(next, action.payload.limit, action.payload.last)\n        const data = []\n        querySnapshot.forEach((snapshot) => {\n            data.push(snapshot.data())\n        })\n        yield put(actions.next.success({\n            data\n        }))\n    } catch (e) {\n        const {response, message} = e\n        yield put(actions.next.failure(response, message))\n    }\n}\n\nexport function* getUserById(action) {\n    try {\n        const user = yield call(takeUserById, action.payload.id)\n        yield put(actions.getUserById.success(user))\n    } catch (e) {\n        const {response, message} = e\n        yield put(actions.getUserById.failure(response, message))\n    }\n}\n\nexport default function* () {\n    yield takeLatest(constants.LIST_REQUESTED, getList)\n    yield takeLatest(constants.PREV_LIST_REQUESTED, callPrev)\n    yield takeLatest(constants.NEXT_LIST_REQUESTED, callNext)\n    yield takeLatest(constants.GET_USER_BY_ID_REQUESTED, getUserById)\n}\n","\nimport { createSelector } from 'reselect'\nimport { moduleName } from '../index'\n\nexport const mainSelectors = createSelector(\n  (state) => state[moduleName],\n  (data) => data\n)\n\nexport const selectList = createSelector(\n    mainSelectors,\n  (data) => data.list\n)\n\nexport const selectListData = createSelector(\n    selectList, (list) => list.data\n)\n\nexport const selectUserById = createSelector(\n    mainSelectors,\n    (data) => data.user.data\n)\n","import {constants} from '../index'\nimport {getAction as action} from '../../../helpers'\n\nexport const listById = ({\n    request: (id, status) => action(constants.LIST_BY_ID_REQUESTED, {id, status}),\n    success: (response) =>\n        action(constants.LIST_BY_ID_SUCCEEDED, {response}),\n    failure: (response, message) =>\n        action(constants.LIST_BY_ID_FAILED, {\n            response,\n            message\n        })\n})\n\nexport const list = ({\n    request: (status) => action(constants.LIST_REQUESTED, {status}),\n    success: (response) =>\n        action(constants.LIST_SUCCEEDED, {response}),\n    failure: (response, message) =>\n        action(constants.LIST_FAILED, {\n            response,\n            message\n        })\n})\n","export const LIST_BY_ID_REQUESTED = 'DOCUMENTS/LIST_BY_ID/REQUESTED'\nexport const LIST_BY_ID_SUCCEEDED = 'DOCUMENTS/LIST_BY_ID/SUCCEEDED'\nexport const LIST_BY_ID_FAILED = 'DOCUMENTS/LIST_BY_ID/FAILED'\nexport const LIST_REQUESTED = 'DOCUMENTS/LIST/REQUESTED'\nexport const LIST_SUCCEEDED = 'DOCUMENTS/LIST/SUCCEEDED'\nexport const LIST_FAILED = 'DOCUMENTS/LIST/FAILED'\n","import {call, put, takeLatest} from 'redux-saga/effects'\nimport {actions, constants} from '../index'\nimport { takeDocumentsWithFilters, takeDocuments} from '../../../adapters/documents'\nexport function* getListById(action) {\n    try {\n        const querySnapshot = yield call(takeDocumentsWithFilters, action.payload.id, action.payload.status)\n        const data = []\n        querySnapshot.forEach((snapshot) => {\n            data.push(snapshot.data())\n        })\n        yield put(actions.listById.success({\n            data\n        }))\n    } catch (e) {\n        const {response, message} = e\n        yield put(actions.listById.failure(response, message))\n    }\n}\n\nexport function* getList(action) {\n    try {\n        const querySnapshot = yield call(takeDocuments, action.payload.status)\n        const data = []\n        querySnapshot.forEach((snapshot) => {\n            data.push(snapshot.data())\n        })\n        console.log(data, 'byID');\n        yield put(actions.list.success({\n            data\n        }))\n    } catch (e) {\n        const {response, message} = e\n        yield put(actions.list.failure(response, message))\n    }\n}\n\nexport default function* () {\n    yield takeLatest(constants.LIST_BY_ID_REQUESTED, getListById)\n    yield takeLatest(constants.LIST_REQUESTED, getList)\n}\n","\nimport { createSelector } from 'reselect'\nimport { moduleName } from '../index'\n\nexport const mainSelector = createSelector(\n  (state) => state[moduleName],\n  (data) => data\n)\nexport const selectList = createSelector(\n  (state) => state[moduleName],\n  (data) => data.listById\n)\n\n\nexport const selectListOfDocumentsById = createSelector(\n    selectList, (list) => list.data\n)\n\nexport const selectListOfDocuments = createSelector(\n    mainSelector, (list) => list.list.data\n)\n","import storage from 'redux-persist/lib/storage'\nimport {persistReducer} from 'redux-persist'\nimport {constants} from '../index'\nimport {getProp} from '../../../helpers'\n\n\nexport const initialState = {\n    statuses: {\n        isStarted: false,\n        isPending: false,\n        isFinished: false,\n        isFailed: false,\n        isSucceed: false\n    },\n    error: {\n        message: ''\n    },\n    data: []\n}\n\nconst reducer =\n    (state = initialState, action) => {\n        switch (action.type) {\n            case constants.LIST_REQUESTED:\n                return {\n                    ...state,\n                    statuses: {\n                        ...state.statuses,\n                        isStarted: true,\n                        isPending: true,\n                    },\n                }\n            case constants.LIST_SUCCEEDED:\n                return {\n                    ...state,\n                    statuses: {\n                        isStarted: false,\n                        isPending: false,\n                        isFinished: true,\n                        isFailed: false,\n                        isSucceed: true\n                    },\n                    data: getProp(() => action.payload.response.data, [])\n                }\n            case constants.LIST_FAILED:\n                return {\n                    ...initialState,\n                    statuses: {\n                        isStarted: false,\n                        isPending: false,\n                        isFinished: true,\n                        isFailed: true,\n                        isSucceed: false\n                    },\n                    error: {\n                        message: getProp(() => action.payload.message, '')\n                    }\n                }\n\n            default:\n                return state\n        }\n    }\nconst conf = {\n    key: 'list',\n    storage\n}\n\nconst persistentReducer = persistReducer(conf, reducer)\n\nexport default persistentReducer\n","import {constants} from '../index'\nimport {getProp} from '../../../helpers'\n\n\nexport const initialState = {\n    statuses: {\n        isStarted: false,\n        isPending: false,\n        isFinished: false,\n        isFailed: false,\n        isSucceed: false\n    },\n    error: {\n        message: ''\n    }\n}\n\nconst reducer =\n    (state = initialState, action) => {\n        switch (action.type) {\n            case constants.ADD_REQUESTED:\n                return {\n                    ...initialState,\n                    statuses: {\n                        ...state.statuses,\n                        isStarted: true,\n                        isPending: true,\n                    },\n                }\n            case constants.ADD_SUCCEEDED:\n                return {\n                    ...state,\n                    statuses: {\n                        isStarted: false,\n                        isPending: false,\n                        isFinished: true,\n                        isFailed: false,\n                        isSucceed: true\n                    },\n                }\n            case constants.ADD_FAILED:\n                return {\n                    ...initialState,\n                    statuses: {\n                        isStarted: false,\n                        isPending: false,\n                        isFinished: true,\n                        isFailed: true,\n                        isSucceed: false\n                    },\n                    error: {\n                        message: getProp(() => action.payload.message, '')\n                    }\n                }\n\n            default:\n                return state\n        }\n    }\n\nexport default reducer\n","import { combineReducers } from 'redux'\nimport list from './list'\nimport add from './add'\n\nconst reducers = {\n  list,\n  add\n}\n\nconst rootReducer = combineReducers(reducers)\nexport default rootReducer\n","import storage from 'redux-persist/lib/storage'\nimport {persistReducer} from 'redux-persist'\nimport {constants} from '../index'\nimport {getProp} from '../../../helpers'\n\n\nexport const initialState = {\n    statuses: {\n        isStarted: false,\n        isPending: false,\n        isFinished: false,\n        isFailed: false,\n        isSucceed: false\n    },\n    error: {\n        message: ''\n    },\n    data: []\n}\n\nconst reducer =\n    (state = initialState, action) => {\n        switch (action.type) {\n            case constants.LIST_REQUESTED:\n            case constants.NEXT_LIST_REQUESTED:\n            case constants.PREV_LIST_REQUESTED:\n                return {\n                    ...state,\n                    statuses: {\n                        ...state.statuses,\n                        isStarted: true,\n                        isPending: true,\n                    },\n                }\n            case constants.LIST_SUCCEEDED:\n            case constants.NEXT_LIST_SUCCEEDED:\n            case constants.PREV_LIST_SUCCEEDED:\n                return {\n                    ...state,\n                    statuses: {\n                        isStarted: false,\n                        isPending: false,\n                        isFinished: true,\n                        isFailed: false,\n                        isSucceed: true\n                    },\n                    data: getProp(() => action.payload.response.data, [])\n                }\n            case constants.LIST_FAILED:\n            case constants.NEXT_LIST_FAILED:\n            case constants.PREV_LIST_FAILED:\n                return {\n                    ...initialState,\n                    statuses: {\n                        isStarted: false,\n                        isPending: false,\n                        isFinished: true,\n                        isFailed: true,\n                        isSucceed: false\n                    },\n                    error: {\n                        message: getProp(() => action.payload.message, '')\n                    }\n                }\n            default:\n                return state\n        }\n    }\nconst conf = {\n    key: 'list.of.students',\n    storage\n}\n\nconst persistentReducer = persistReducer(conf, reducer)\n\nexport default persistentReducer\n","import storage from 'redux-persist/lib/storage'\nimport {persistReducer} from 'redux-persist'\nimport {constants} from '../index'\nimport {getProp} from '../../../helpers'\n\n\nexport const initialState = {\n    statuses: {\n        isStarted: false,\n        isPending: false,\n        isFinished: false,\n        isFailed: false,\n        isSucceed: false\n    },\n    error: {\n        message: ''\n    },\n    data: {}\n}\n\nconst reducer =\n    (state = initialState, action) => {\n        switch (action.type) {\n            case constants.GET_USER_BY_ID_REQUESTED:\n                return {\n                    ...state,\n                    statuses: {\n                        ...state.statuses,\n                        isStarted: true,\n                        isPending: true,\n                    },\n                }\n            case constants.GET_USER_BY_ID_SUCCEEDED:\n                return {\n                    ...state,\n                    statuses: {\n                        isStarted: false,\n                        isPending: false,\n                        isFinished: true,\n                        isFailed: false,\n                        isSucceed: true\n                    },\n                    data: getProp(() => action.payload.user, {})\n                }\n            case constants.GET_USER_BY_ID_FAILED:\n                return {\n                    ...initialState,\n                    statuses: {\n                        isStarted: false,\n                        isPending: false,\n                        isFinished: true,\n                        isFailed: true,\n                        isSucceed: false\n                    },\n                    error: {\n                        message: getProp(() => action.payload.message, '')\n                    }\n                }\n            default:\n                return state\n        }\n    }\nconst conf = {\n    key: 'user.by.id',\n    storage\n}\n\nconst persistentReducer = persistReducer(conf, reducer)\n\nexport default persistentReducer\n","import { combineReducers } from 'redux'\nimport list from './list'\nimport user from './user'\n\nconst reducers = {\n  list,\n  user\n}\n\nconst rootReducer = combineReducers(reducers)\nexport default rootReducer\n","import storage from 'redux-persist/lib/storage'\nimport {persistReducer} from 'redux-persist'\nimport {constants} from '../index'\nimport {getProp} from '../../../helpers'\n\nexport const initialState = {\n    statuses: {\n        isStarted: false,\n        isPending: false,\n        isFinished: false,\n        isFailed: false,\n        isSucceed: false\n    },\n    error: {\n        message: ''\n    },\n    data: []\n}\n\nconst reducer =\n    (state = initialState, action) => {\n        switch (action.type) {\n            case constants.LIST_REQUESTED:\n                return {\n                    ...state,\n                    statuses: {\n                        ...state.statuses,\n                        isStarted: true,\n                        isPending: true,\n                    },\n                }\n            case constants.LIST_SUCCEEDED:\n                return {\n                    ...state,\n                    statuses: {\n                        isStarted: false,\n                        isPending: false,\n                        isFinished: true,\n                        isSucceed: true\n                    },\n                    data: getProp(() => action.payload.response.data, [])\n                }\n            case constants.LIST_FAILED:\n                return {\n                    ...initialState,\n                    statuses: {\n                        isPending: false,\n                        isFinished: true,\n                        isFailed: true,\n                        isSucceed: false\n                    },\n                    error: {\n                        message: getProp(() => action.payload.message, '')\n                    }\n                }\n            default:\n                return state\n        }\n    }\nconst conf = {\n    key: 'list.of.documents',\n    storage\n}\n\nconst persistentReducer = persistReducer(conf, reducer)\n\nexport default persistentReducer\n","import storage from 'redux-persist/lib/storage'\nimport {persistReducer} from 'redux-persist'\nimport {constants} from '../index'\nimport {getProp} from '../../../helpers'\n\nexport const initialState = {\n    statuses: {\n        isStarted: false,\n        isPending: false,\n        isFinished: false,\n        isFailed: false,\n        isSucceed: false\n    },\n    error: {\n        message: ''\n    },\n    data: []\n}\n\nconst reducer =\n    (state = initialState, action) => {\n        switch (action.type) {\n            case constants.LIST_BY_ID_REQUESTED:\n                return {\n                    ...state,\n                    statuses: {\n                        ...state.statuses,\n                        isStarted: true,\n                        isPending: true,\n                    },\n                }\n            case constants.LIST_BY_ID_SUCCEEDED:\n                return {\n                    ...state,\n                    statuses: {\n                        isStarted: false,\n                        isPending: false,\n                        isFinished: true,\n                        isSucceed: true\n                    },\n                    data: getProp(() => action.payload.response.data, [])\n                }\n            case constants.LIST_BY_ID_FAILED:\n                return {\n                    ...initialState,\n                    statuses: {\n                        isPending: false,\n                        isFinished: true,\n                        isFailed: true,\n                        isSucceed: false\n                    },\n                    error: {\n                        message: getProp(() => action.payload.message, '')\n                    }\n                }\n            default:\n                return state\n        }\n    }\nconst conf = {\n    key: 'list.of.documents.by.id',\n    storage\n}\n\nconst persistentReducer = persistReducer(conf, reducer)\n\nexport default persistentReducer\n","import { combineReducers } from 'redux'\nimport list from './list'\nimport listById from './listById'\n\nconst reducers = {\n  list,\n  listById\n}\n\nconst rootReducer = combineReducers(reducers)\nexport default rootReducer\n","import storage from 'redux-persist/lib/storage'\nimport {persistReducer} from 'redux-persist'\nimport {ADD, REMOVE} from '../constants'\nexport const initialState = {\n    user: null\n}\n\nconst reducer =\n    (state = initialState, action) => {\n        switch (action.type) {\n            case ADD:\n                return {user: action.payload.user}\n            case REMOVE:\n                return {user: null}\n            default:\n                return state\n        }\n    }\nconst conf = {\n    key: 'user',\n    storage\n}\n\nconst persistentReducer = persistReducer(conf, reducer)\n\nexport default persistentReducer\n","import { combineReducers } from 'redux'\nimport user from './user'\n\nconst reducers = {\n  user\n}\n\nconst rootReducer = combineReducers(reducers)\nexport default rootReducer\n","import {firestore} from \"./helpers\"\n\nconst FILM_COLLECTION = firestore.collection(\"films\")\n\nexport function addFilm(data: {\n    id?: string;\n    name: string\n}) {\n    let film = FILM_COLLECTION.doc()\n    data.id = film.id\n    return film.set(data)\n}\n\nexport async function getFilms() {\n    let query: any = firestore.collection(\"films\")\n    return query.orderBy('addDate', 'desc').get()\n}\n\nexport async function removeFilm(id: string) {\n    return FILM_COLLECTION.doc(id).delete()\n}\n\nexport const listen = () => {\n    const query = firestore.collection('messages')\n\n    return query.onSnapshot(querySnapshot => {\n\n        const a = querySnapshot.docChanges().forEach(change => {\n            if (change.type === 'added') {\n                console.log('New city: ', change.doc.data());\n            }\n            if (change.type === 'modified') {\n                console.log('Modified city: ', change.doc.data());\n            }\n            if (change.type === 'removed') {\n                console.log('Removed city: ', change.doc.data());\n            }\n        });\n        console.log(a);\n        // ...\n    }, err => {\n        console.log(`Encountered error: ${err}`);\n    });\n}\n","import {all, call, put, takeLatest} from 'redux-saga/effects'\nimport {actions, constants} from '../index'\nimport {addFilm, getFilms, removeFilm} from '../../../adapters/main'\n\nexport function* getList() {\n    try {\n        const querySnapshot = yield call(getFilms)\n        const data = []\n        querySnapshot.forEach((snapshot) => {\n            data.push(snapshot.data())\n        })\n        yield put(actions.get.success({\n            data\n        }))\n    } catch (e) {\n        const {response, message} = e\n        yield put(actions.get.failure(response, message))\n    }\n}\n\nexport function* addElement(action) {\n    const {data} = action.payload\n    try {\n        yield call(addFilm, {\n            ...data,\n            addDate: (new Date().getTime())\n        })\n        yield all([\n            put(actions.add.success()),\n            put(actions.get.request()),\n        ])\n    } catch (e) {\n        const {response, message} = e\n        yield put(actions.add.failure(response, message))\n    }\n}\n\nexport function* remove(action) {\n    const {id} = action.payload\n    try {\n        yield call( removeFilm, id)\n        yield all([\n            put(actions.add.success()),\n            put(actions.get.request()),\n        ])\n    } catch (e) {\n        const {response, message} = e\n        yield put(actions.add.failure(response, message))\n    }\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function* () {\n    yield takeLatest(constants.LIST_REQUESTED, getList)\n    yield takeLatest(constants.ADD_REQUESTED, addElement)\n    yield takeLatest(constants.REMOVE_REQUESTED, remove)\n}\n","import * as actions from './actions'\nimport * as constants from './constants'\nimport reducer from './reducers'\nimport saga from './sagas'\nimport * as selectors from './selectors'\nconst moduleName = 'Main'\n\nexport {\n  moduleName,\n  reducer,\n  actions,\n  selectors,\n  constants,\n  saga\n}\n","import * as actions from './actions'\nimport * as constants from './constants'\nimport reducer from './reducers'\nimport saga from './sagas'\nimport * as selectors from './selectors'\nconst moduleName = 'Documents'\n\nexport {\n  moduleName,\n  reducer,\n  actions,\n  selectors,\n  constants,\n  saga\n}\n","var map = {\n\t\"./Auth/actions/index.js\": 244,\n\t\"./Auth/constants/index.js\": 142,\n\t\"./Auth/index.js\": 75,\n\t\"./Auth/reducers/index.js\": 291,\n\t\"./Auth/selectors/index.js\": 245,\n\t\"./Documents/actions/index.js\": 259,\n\t\"./Documents/constants/index.js\": 260,\n\t\"./Documents/index.js\": 42,\n\t\"./Documents/reducers/index.js\": 290,\n\t\"./Documents/sagas/index.js\": 261,\n\t\"./Documents/selectors/index.js\": 262,\n\t\"./Main/actions/index.js\": 241,\n\t\"./Main/constants/index.js\": 242,\n\t\"./Main/index.js\": 40,\n\t\"./Main/reducers/index.js\": 288,\n\t\"./Main/sagas/index.js\": 292,\n\t\"./Main/selectors/index.js\": 243,\n\t\"./Users/actions/index.js\": 246,\n\t\"./Users/constants/index.js\": 247,\n\t\"./Users/index.js\": 20,\n\t\"./Users/reducers/index.js\": 289,\n\t\"./Users/sagas/index.js\": 248,\n\t\"./Users/selectors/index.js\": 249\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 466;","import firebase from 'firebase';\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: \"student-campus.firebaseapp.com\",\n    databaseURL: \"https://student-campus-default-rtdb.firebaseio.com\",\n    projectId: \"student-campus\",\n    storageBucket: \"student-campus.appspot.com\",\n    messagingSenderId: \"241781208381\",\n    appId: \"1:241781208381:web:21b944c26b726c3dae8154\",\n    measurementId: \"G-S8TEJKNG0K\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const database = firebase.database();\nexport const firestore = firebase.firestore();\nexport const storage = firebase.storage();\n\n","import React from \"react\";\nimport {format, isValid} from \"date-fns\";\nimport ImagePopup from \"./image-popup\";\nimport {Img, StyledTable} from './styles'\nimport {Button, Popconfirm, Tag} from \"antd\";\nimport {DeleteTwoTone, HeartTwoTone} from \"@ant-design/icons\";\nimport {\n    handleApprove,\n    handleRemove\n} from '../../adapters/documents'\nimport { useHistory } from \"react-router-dom\";\n\nenum Status {\n    Pending = 'Pending',\n    Approved= 'Approved',\n    Rejected= 'Rejected',\n}\n\ninterface Row {\n    userId: string,\n    username: string,\n    file: any,\n    desc: string,\n    createdAt: number,\n    status?: Status\n}\n\nconst formatDate = (d: number) => {\n    const date = new Date(d)\n    if (isValid(date)) {\n        return format(date, \"yyyy.MM.dd 'at' HH:mm:ss\")\n    }\n    return 'undefined'\n}\n\nconst generateTagColor = (status: Status) => {\n    switch (status) {\n        case Status.Approved:\n            return '#075599'\n        case Status.Rejected:\n            return '#cb076e'\n        default:\n            return '#b37feb'\n    }\n}\n\n\nconst TableComponent = ({data, withLink}: { data: Row[], withLink?: boolean }) => {\n    let history = useHistory();\n    const columns = [\n        {\n            title: 'Image',\n            dataIndex: 'file',\n            key: 'file',\n            width: '5%',\n            render: (_: any, row: any) => {\n                return (\n                    withLink ? (\n                        <ImagePopup row={row}>\n                            <Img src={row.file} alt=\"document\"/>\n                        </ImagePopup>\n\n                    ): (\n                        <a target={'_blank'} href={row.file}>\n                            <Img src={row.file} alt=\"document\"/>\n                        </a>\n                    )\n                )\n            }\n        },\n        {\n            title: 'username',\n            dataIndex: 'username',\n            key: 'username',\n            width: '10%',\n        },\n        {\n            title: 'User Id',\n            dataIndex: 'userId',\n            key: 'userId',\n            width: '10%',\n        },\n        {\n            title: 'campus',\n            dataIndex: 'campus',\n            key: 'campus',\n            width: '10%',\n            render: (_: any, row: any) => (\n                <Tag color={generateTagColor(row.status)} key={row.id}>\n                    {row.status}\n                </Tag>\n            )\n        },\n        {\n            title: 'Description',\n            dataIndex: 'desc',\n            key: 'desc',\n            width: '15%',\n        },\n        {\n            title: 'Created At',\n            dataIndex: 'createdAt',\n            key: 'createdAt',\n            width: '10%',\n            render: (_: any, row: any) => (\n                <span>{formatDate(row.createdAt)}</span>\n            )\n        },\n        {\n            title: 'Action',\n            dataIndex: 'action',\n            key: 'action',\n            width: '10%',\n            render: (_: any, row: any) => (\n                <>\n                    <Popconfirm key={`approve_${row.id}`} title=\"Sure to approve?\"\n                                onConfirm={() => handleApprove(row)}>\n                        <Button>\n                            <HeartTwoTone/>\n                        </Button>\n                    </Popconfirm>\n                    <Popconfirm key={`reject_${row.id}`} title=\"Sure to remove?\"\n                                onConfirm={() => handleRemove(row)}>\n                        <Button>\n                            <DeleteTwoTone twoToneColor=\"#f5222d\"/>\n                        </Button>\n                    </Popconfirm>\n                </>\n            )\n        },\n    ];\n\n    const renderColor = (status: Status) => {\n        switch (status) {\n            case Status.Approved: return 'tableRowGreen'\n            case Status.Rejected: return 'tableRowRed'\n            default: return 'tableRow'\n        }\n    }\n\n    const handleRoute = (id: string) => {\n        history.push(`/documents/${id}`);\n    }\n\n    return (\n        <StyledTable\n            onRow={(record: any, index: any) => ({\n                onDoubleClick: () => {\n                        withLink && handleRoute(record.userId)\n                    }\n                })\n            }\n            rowClassName={(record: any) => renderColor(record.status)}\n            dataSource={data}\n            columns={columns}\n            pagination={false}\n        />\n    );\n}\n\nexport default TableComponent\n","import React, {useCallback, useEffect, useMemo, useState} from 'react';\nimport {Button, DatePicker, Form, Input, InputNumber, Modal, Select, Tooltip} from 'antd';\nimport {EditTwoTone, FileAddTwoTone} from '@ant-design/icons'\nimport {addUserWithEmail, updateStudent} from '../../adapters/users';\nimport moment from \"moment\";\nimport {omit} from 'lodash'\n\nconst AddModal = ({ student, callTake }: { student?: any, callTake?: any }) => {\n    const [form] = Form.useForm();\n    const isEdit = useMemo(() => Boolean(student), [student])\n    const [visible, setVisible] = useState(false);\n    const [file, setFile] = useState(null);\n\n    const onCreate = (values: any) => {\n        setVisible(false);\n        if (isEdit) {\n            callTake()\n            update({\n                ...student,\n                ...values,\n            })\n        } else {\n            add(values)\n        }\n    };\n\n    useEffect(() => {\n        if (form && visible && student) {\n            form.setFieldsValue({\n                name: student.name,\n                idNumber: student.idNumber,\n                no: student.no,\n                campus: student.campus,\n                email: student.email,\n                birth: moment(student.birth)\n            })\n        }\n    }, [form, visible, student])\n\n    const submit = () => {\n        form\n            .validateFields()\n            .then(values => {\n                onCreate(values)\n                form.resetFields();\n            })\n            .catch(info => {\n                console.log('Validate Failed:', info);\n            })\n    }\n    const add = useCallback((o) => {\n        const student = {\n            ...o,\n            file,\n            birth: o.birth.toString(),\n            createdAt: new Date().getTime()\n        }\n        addUserWithEmail(student).then((usr) => {\n            console.log(usr, 'success');\n        }).catch((err)=> console.log(err))\n    }, [file])\n\n    const update = useCallback((student) => {\n        const omitArr = ['birth', 'createdAt']\n        if(!student.file) omitArr.push('file')\n        updateStudent(omit(student, omitArr)).then(() => {\n            console.log('update')\n        }).catch((e) => {\n            console.log(e, 'denied')\n        })\n    }, [])\n\n    const change = (e: any) => {\n        const files = e.target.files;\n        console.log(files);\n        setFile(files[0])\n      }\n\n    return (\n        <>\n            <Tooltip title=\"დაამატე სტუდენტი\" placement=\"bottom\">\n                <Button onClick={() => setVisible(true)}>\n                    {\n                        isEdit ? <EditTwoTone twoToneColor=\"#fadb14\" /> : <FileAddTwoTone twoToneColor=\"#52c41a\" />\n                    }\n                </Button>\n            </Tooltip>\n            <Modal\n                title=\"Add Student\"\n                centered\n                visible={visible}\n                onOk={submit}\n                onCancel={() => setVisible(false)}\n                width={1000}>\n                <Form\n                    form={form}\n                    labelCol={{ span: 4 }}\n                    wrapperCol={{ span: 14 }}\n                    layout=\"horizontal\"\n                >\n                    <Form.Item name={'email'} label=\"email\">\n                        <Input />\n                    </Form.Item>\n                    <Form.Item name={'name'} label=\"სახელი, გვარი\">\n                        <Input />\n                    </Form.Item>\n                    <Form.Item name={'idNumber'} label=\"პირადი ნომერი\">\n                        <Input />\n                    </Form.Item>\n                    <Form.Item name={'no'} label=\"ბინა\">\n                        <InputNumber />\n                    </Form.Item>\n                    <Form.Item name={'campus'} label=\"საცხოვრებელი კორპ.\">\n                        <Select>\n                            <Select.Option value=\"პირველი\">პირველი</Select.Option>\n                            <Select.Option value=\"მეორე\">მეორე</Select.Option>\n                            <Select.Option value=\"ლისი\">ლისი</Select.Option>\n                        </Select>\n                    </Form.Item>\n                    <Form.Item name={'birth'} label=\"დაბადებული\">\n                        <DatePicker disabled={isEdit} />\n                    </Form.Item>\n                    <Form.Item name={'file'} label=\"file\">\n                        <input type='file' onChange={change}/>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </>\n    );\n};\n\nexport default AddModal\n","import React from 'react';\nimport {Popover} from 'antd';\nimport styled from \"styled-components\";\n\ninterface User {\n    birth: string,\n    campus: string,\n    createdAt: number,\n    email: string,\n    idNumber: string,\n    img: string,\n    name: string,\n    no: number,\n    role: string,\n    uid: string,\n}\n\ninterface T {\n    row: User,\n    children: React.ReactNode\n}\nconst Img = styled.img`\n  width: 400px;\n  cursor: pointer;\n`\n\nconst ImagePopup = ({children, row}: T) => {\n    return (\n        <Popover\n            title={row.name}\n            content={<Img src={row.img} alt=\"student\"/>}\n            >\n            {children}\n        </Popover>\n    );\n};\n\nexport default ImagePopup\n","import React, {useCallback, useEffect, useState} from 'react'\nimport {Table, Input, Button, Space, Popconfirm, Tag} from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport {selectors, actions} from '../../modules/Users'\nimport {\n    SearchOutlined,\n    DeleteTwoTone,\n    RightOutlined,\n    LeftOutlined\n} from '@ant-design/icons';\nimport styled from \"styled-components\";\nimport {\n    removeFilm,\n    totalSize\n} from \"../../adapters/users\";\nimport {formatDate} from '../../helpers'\nimport AddModal from './add'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport ImagePopup from \"./image-popup\";\n\nconst StyledTable = styled(Table)`\n  width: 80%;\n  margin: 0 auto;\n  @media (max-width: 1024px) {\n    width: 98%;\n  }\n`\n\nconst Centered = styled.div`\n  width: 80%;\n  display: flex;\n  margin: auto;\n  justify-content: flex-end;\n  align-items: center;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 3rem;\n`\n\nconst Img = styled.img`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  cursor: pointer;\n`\n\nconst generateTagColor = (tag) => {\n    switch (tag) {\n        case 'პირველი':\n            return '#36cfc9'\n        case 'მეორე':\n            return '#b37feb'\n        default:\n            return '#f759ab'\n    }\n}\n\nconst size = 100\nconst StudentsTable = () => {\n    const dispatch = useDispatch()\n    const [page, setPage] = useState(1)\n    const rows = useSelector(selectors.selectListData)\n    const callTake = useCallback(() => {\n        dispatch(actions.get.request({\n            limit: size\n        }))\n    }, [dispatch])\n\n    useEffect(() => {\n        callTake()\n    }, [callTake])\n\n    const goPrev = () => {\n        const el = rows[0]\n        setPage(page - 1)\n        if (el) {\n            dispatch(actions.prev.request({\n                limit: size,\n                first: el\n            }))\n        } else {\n            callTake()\n        }\n    }\n\n    const goNext = () => {\n        const el = rows[rows.length - 1]\n        setPage(page + 1)\n        if (el) {\n            dispatch(actions.next.request({\n                limit: size,\n                last: el\n            }))\n        } else {\n            callTake()\n        }\n    }\n\n    const [order, setOrder] = useState('descend')\n    const [info, setInfo] = useState('')\n    const [searchText, setSearchText] = useState('')\n    const [searchedColumn, setSearchedColumn] = useState('')\n    const getColumnSearchProps = dataIndex => ({\n        filterDropdown: ({\n                             setSelectedKeys,\n                             selectedKeys,\n                             confirm,\n                             clearFilters\n                         }) => (\n            <div style={{padding: 8}}>\n                <Input\n                    placeholder={`Search ${dataIndex}`}\n                    value={selectedKeys[0]}\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n                    onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n                    style={{width: 188, marginBottom: 8, display: 'block'}}\n                />\n                <Space>\n                    <Button\n                        type=\"primary\"\n                        onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n                        icon={<SearchOutlined/>}\n                        size=\"small\"\n                        style={{width: 90}}\n                    >\n                        Search\n                    </Button>\n                    <Button onClick={() => handleReset(clearFilters)}\n                            size=\"small\" style={{width: 90}}>\n                        Reset\n                    </Button>\n                    <Button\n                        type=\"link\"\n                        size=\"small\"\n                        onClick={() => {\n                            confirm({closeDropdown: false});\n                            setSearchText(selectedKeys[0])\n                            setSearchedColumn(dataIndex)\n                        }}\n                    >\n                        Filter\n                    </Button>\n                </Space>\n            </div>\n        ),\n        filterIcon: filtered => <SearchOutlined\n            style={{color: filtered ? '#1890ff' : undefined}}/>,\n        onFilter: (value, record) =>\n            record[dataIndex]\n                ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\n                : '',\n        render: text =>\n            searchedColumn === dataIndex ? (\n                <Highlighter\n                    highlightStyle={{backgroundColor: '#ffc069', padding: 0}}\n                    searchWords={[searchText]}\n                    autoEscape\n                    textToHighlight={text ? text.toString() : ''}\n                />\n            ) : (\n                text\n            ),\n    });\n    const handleSearch = (selectedKeys, confirm, dataIndex) => {\n        confirm();\n        setSearchText(selectedKeys[0])\n        setSearchedColumn(dataIndex)\n    };\n\n    const handleReset = clearFilters => {\n        clearFilters();\n        setSearchText('')\n    };\n\n    const handleChange = (pagination, filters, sorter) => {\n        if (sorter.field === 'birth') {\n            setOrder(sorter.order)\n            setInfo(sorter.field)\n        }\n    };\n    const handleDelete = useCallback((id) => () => {\n        removeFilm(id).then(() => {\n            callTake()\n            console.log('removed');\n        }).catch((e) => {\n            console.log(e, 'error while removing');\n        })\n    }, [callTake])\n\n    const columns = [\n        {\n            title: 'Image',\n            dataIndex: 'image',\n            key: 'image',\n            width: '5%',\n            render: (_, row) => {\n                return (\n                    <ImagePopup row={row}>\n                        <Img src={row.img} alt=\"student\"/>\n                    </ImagePopup>\n                )\n            }\n        },\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            key: 'name',\n            width: '20%',\n            ...getColumnSearchProps('name'),\n        },\n        {\n            title: 'ID',\n            dataIndex: 'idNumber',\n            key: 'idNumber',\n            width: '15%',\n        },\n        {\n            title: 'No',\n            dataIndex: 'no',\n            key: 'no',\n            width: '10%',\n        },\n        {\n            title: 'Email',\n            dataIndex: 'email',\n            key: 'name',\n            width: '20%',\n        },\n        {\n            title: 'campus',\n            dataIndex: 'campus',\n            key: 'campus',\n            width: '10%',\n            render: (_, row) => (\n                <Tag color={generateTagColor(row.campus)} key={row.id}>\n                    {row.campus}\n                </Tag>\n            )\n        },\n        {\n            title: 'birth',\n            dataIndex: 'birth',\n            key: 'birth',\n            width: '10%',\n            sorter: (a, b) => new Date(a.birth).getDate() - new Date(b.birth).getDate(),\n            sortOrder: info === 'birth' && order,\n            ellipsis: true,\n            render: (_, row) => <p>{formatDate(row.birth, 'yyyy.MM.dd')}</p>\n        },\n        {\n            title: 'Action',\n            dataIndex: 'action',\n            key: 'action',\n            width: '10%',\n            render: (_, row) => (\n                <>\n                    <AddModal student={row} callTake={callTake}/>\n                    <Popconfirm key={row.id} title=\"Sure to delete?\"\n                                onConfirm={handleDelete(row.id)}>\n                        <Button>\n                            <DeleteTwoTone twoToneColor=\"#f5222d\"/>\n                        </Button>\n                    </Popconfirm>\n                </>\n            )\n        },\n    ];\n    return <>\n        <StyledTable\n            columns={columns}\n            dataSource={rows}\n            pagination={false}\n            onChange={handleChange}/>\n        <Centered>\n            <div>\n                <Button onClick={goPrev} disabled={page === 1}>\n                    <LeftOutlined twoToneColor=\"#f5222d\"/>\n                </Button>\n                <Button onClick={goNext} disabled={page * size >= totalSize}>\n                    <RightOutlined twoToneColor=\"#f5222d\"/>\n                </Button>\n            </div>\n        </Centered>\n    </>\n}\n\nexport default StudentsTable\n","import React, {useEffect} from 'react';\nimport '../../App.css';\nimport {useDispatch, useSelector} from 'react-redux'\nimport {actions} from '../../modules/Main'\nimport {selectors as authSelectors} from '../../modules/Auth'\nimport styled from \"styled-components\";\nimport {Typography} from \"antd\";\nimport Header from '../Header'\n\nimport Table from '../students/table'\n\nconst {Title} = Typography;\n\nconst StyledTitle = styled(Title)`\n  text-align: center;\n  font-style: italic;\n  color: #001529 !important;\n  margin-top: .5rem\n`;\n\n\nconst Index = () => {\n    const dispatch = useDispatch()\n    const user = useSelector(authSelectors.selectUser)\n\n    useEffect(() => {\n        dispatch(actions.get.request())\n    }, [dispatch]);\n\n\n    return (\n        <div className=\"App\">\n            <StyledTitle type=\"secondary\" level={4}>Welcome back {user.name} your role\n                is {user.role || 'admin'}</StyledTitle>\n            <hr/>\n            <Table/>\n        </div>\n    );\n}\n\nexport default Index;\n","import {firestore} from \"./helpers\"\nimport {useCollectionData} from 'react-firebase-hooks/firestore';\nconst COLLECTION = firestore.collection(\"messages\")\n\nexport const messages = () => {\n    return COLLECTION\n}\nexport const removeMessage = (id: string) => {\n    return COLLECTION.doc(id).delete()\n}\n\n\ninterface DataType {\n    id: string\n    uid: string,\n    text: string,\n    photo: string,\n    createdAt: number,\n    displayName: string,\n    file?: string\n}\n\nexport const useMessagesStream = () => {\n    const query = COLLECTION.orderBy('createdAt').limit(25);\n    return useCollectionData<DataType>(query, {idField: 'id'})[0]\n}\n\ninterface SendDataTypes  {\n    uid: string,\n    text: string,\n    photo: string,\n    createdAt: number,\n    user: string,\n}\n\nexport const sendMessage = (data: SendDataTypes) => COLLECTION.add(data)\n\n","import React, {useCallback, useEffect, useRef} from \"react\";\nimport {Avatar, Button, List, Popconfirm} from 'antd';\nimport {format, isValid} from \"date-fns\";\nimport styled from \"styled-components\";\nimport {database} from '../../adapters/helpers'\nimport {removeMessage} from '../../adapters/chat'\n\nconst db = database.ref(\"messages\");\n\ninterface DataType {\n    text: string,\n    photo: string,\n    uid: string,\n    createdAt: number,\n    displayName: string,\n    id: string\n}\n\nconst formatDate = (d: number) => {\n    const date = new Date(d)\n    if (isValid(date)) {\n        return format(date, \"yyyy.MM.dd 'at' HH:mm:ss\")\n    }\n    return 'undefined'\n}\n\nconst CustomList = styled(List)`\n  width: 100%;\n  height: 90vh;\n  border: 1px dashed grey;\n  padding: 1rem 2rem;\n  margin:0 auto;\n  overflow-y: auto;\n`;\n\nconst TableComponent = ({data}: { data: DataType[] }) => {\n    const handleDelete = useCallback((id: string) => () => {\n        return removeMessage(id);\n    }, [])\n\n    const rows = data.map(r => ({\n        ...r,\n        key: r.uid\n    }))\n    const forScroll = useRef<HTMLDivElement>(null)\n\n    useEffect(() => {\n        // @ts-ignore\n        forScroll.current.scrollIntoView({behavior: 'smooth'})\n    }, [rows])\n    // <div ref={forScroll}/>\n\n    return (\n        <CustomList\n            className=\"demo-loadmore-list\"\n            // loading={initLoading}\n            itemLayout=\"horizontal\"\n            // loadMore={loadMore}\n            footer={<div style={{padding: 0}} ref={forScroll}/>}\n            dataSource={rows}\n            renderItem={(item: any) => (\n                <List.Item\n                    actions={[\n                        <Popconfirm\n                            title=\"Sure to delete?\"\n                            onConfirm={handleDelete(item.id)}>\n                            <Button>\n                                delete\n                            </Button>\n                        </Popconfirm>\n                    ]}\n                >\n                    <List.Item.Meta\n                        avatar={\n                            <Avatar src={item.photo}/>\n                        }\n                        title={item.user}\n                        description={item.text}\n                    />\n                </List.Item>\n            )}\n        />\n    );\n}\n\nexport default TableComponent\n","import React, {useCallback, useEffect, useRef} from 'react';\nimport '../../App.css';\nimport {useSelector} from 'react-redux'\nimport {useMessagesStream, sendMessage} from '../../adapters/chat'\nimport styled from \"styled-components\";\nimport {Input, message as notification} from \"antd\";\nimport TableComponent from './table'\nimport {selectors as authSelectors} from '../../modules/Auth'\n\nconst Container = styled.div`\n  width: 60%;\n  margin: 0 auto;\n`\n\nconst InputDiv = styled.div`\n  width: 100%;\n  margin: 0 auto;\n`;\n\nconst Index = () => {\n    const user = useSelector(authSelectors.selectUser)\n    const rows = useMessagesStream()\n    const forScroll = useRef<HTMLDivElement>(null)\n    const addFilm = useCallback((message) => {\n        sendMessage({\n            uid: user.uid,\n            text: message,\n            photo: user.photoURL,\n            createdAt: new Date().getTime(),\n            user: user.displayName,\n        }).then((r) => {\n            notification.success('successfully sent!')\n        }).catch((e) => {\n            notification.error('something went wrong, for info ask customer support!')\n        })\n\n    }, [user.displayName, user.photoURL, user.uid])\n\n    useEffect(() => {\n        // @ts-ignore\n        forScroll.current.focus()\n    }, [rows])\n\n    return (\n        <Container>\n            {\n                rows && <TableComponent data={rows}/>\n            }\n            <div ref={forScroll}/>\n            <InputDiv>\n                <Input.Search\n                    allowClear\n                    placeholder=\"add message\"\n                    enterButton=\"Send\"\n                    onSearch={addFilm}\n                />\n            </InputDiv>\n        </Container>\n    );\n}\n\nexport default Index;\n","import React from 'react';\nimport {Popover} from 'antd';\nimport styled from \"styled-components\";\n\ninterface Row {\n    userId: string,\n    username: string,\n    file: any,\n    desc: string,\n    createdAt: number\n}\n\ninterface T {\n    row: Row,\n    children: React.ReactNode\n}\nconst Img = styled.img`\n  width: 400px;\n  cursor: pointer;\n`\n\nconst ImagePopup = ({children, row}: T) => {\n    return (\n        <Popover\n            title={row.username}\n            content={<Img src={row.file} alt=\"student\"/>}\n        >\n            {children}\n        </Popover>\n    );\n};\n\nexport default ImagePopup\n","import styled from \"styled-components\";\nimport {Table} from \"antd\";\n\nconst Img = styled.img`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  cursor: pointer;\n  border: 1px solid #282c34;\n`\n\n\nconst StyledTable = styled(Table)`\n  margin: 0 auto;\n`\n\nexport {\n    Img,\n    StyledTable,\n}\n\n","import React, {useEffect, useState} from 'react';\nimport '../../App.css';\nimport styled from \"styled-components\";\nimport TableComponent from './table'\nimport {Tabs} from \"antd\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {actions, selectors} from \"../../modules/Documents\";\n\nconst { TabPane } = Tabs;\n\nconst Container = styled.div`\n  box-shadow: -1px -1px 6px 1px rgba(0,0,0,0.1);\n  width: 100%;\n  position: relative;\n  background-color: #282c34;\n  padding: 2rem 5rem;\n`\n\nenum Status {\n    Pending= 'Pending',\n    Approved= 'Approved',\n    Rejected= 'Rejected',\n}\n\nconst Index = () => {\n    const dispatch = useDispatch()\n    const [status, setStatus] = useState('')\n    const rows = useSelector(selectors.selectListOfDocuments)\n    useEffect(() => {\n        dispatch(actions.list.request( status))\n    }, [dispatch, status])\n    return (\n        <Container>\n            <Tabs\n                tabBarStyle={{\n                    color: '#fefae0'\n                }}\n                onChange={setStatus}>\n                <TabPane tab={'All'} key={''} />\n                <TabPane tab={Status.Pending} key={Status.Pending} />\n                <TabPane tab={Status.Approved} key={Status.Approved}/>\n                <TabPane tab={Status.Rejected} key={Status.Rejected}/>\n            </Tabs>\n            {\n                rows && <TableComponent data={rows} withLink/>\n            }\n        </Container>\n    );\n}\n\nexport default Index;\n","import React, {useEffect, useState} from 'react';\nimport '../../App.css';\nimport styled from \"styled-components\";\nimport {useParams} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {actions, selectors} from \"../../modules/Documents\";\nimport TableComponent from './table';\nimport User from './user';\nimport { Tabs } from 'antd';\nconst { TabPane } = Tabs;\n\nconst Container = styled.div`\n  box-shadow: -1px -1px 6px 1px rgba(0,0,0,0.1);\n  width: 96%;\n  position: relative;\n  margin: 10rem auto 0;\n  background-color: #282c34;\n  padding: 5rem;\n  border-radius: 20px;\n`\n\nenum Status {\n    Pending= 'Pending',\n    Approved= 'Approved',\n    Rejected= 'Rejected',\n}\n\n\ninterface ParamsType {\n    id: string\n}\n\nconst Index = () => {\n    const dispatch = useDispatch()\n    const [status, setStatus] = useState('')\n\n    const {id}: ParamsType = useParams()\n    const rows = useSelector(selectors.selectListOfDocumentsById)\n    useEffect(() => {\n        dispatch(actions.listById.request(id, status))\n    }, [dispatch, id, status])\n    return (\n        <Container>\n                <User id={id}/>\n                <Tabs\n                    tabBarStyle={{\n                        color: '#fefae0'\n                    }}\n                    onChange={setStatus}>\n                    <TabPane tab={'All'} key={''} />\n                    <TabPane tab={Status.Pending} key={Status.Pending} />\n                    <TabPane tab={Status.Approved} key={Status.Approved}/>\n                    <TabPane tab={Status.Rejected} key={Status.Rejected}/>\n                </Tabs>\n                {\n                    rows && <TableComponent data={rows} />\n                }\n            </Container>\n    );\n}\n\nexport default Index;\n","import React, {useEffect} from 'react';\nimport '../../App.css';\nimport styled from \"styled-components\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport { selectors, actions } from '../../modules/Users';\n\nconst Container = styled.div`\n  width: 100%;\n  position: absolute;\n  top: -10rem;\n  left: 0;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  height: 20rem;\n`\n\nconst FlexDiv = styled.div`\n  display: flex;\n  justify-content: space-around;\n  gap: 1rem;\n  flex-direction: column;\n  align-items: center;\n`\nconst Username = styled.span`\n  color: #fefae0;\n  font-size: 1.25rem;\n  font-weight: bold;\n`\n\nconst Img = styled.img`\n  width: 100px;\n  height: 100px;\n  object-fit: cover;\n  border: #282c34 1px solid;\n  border-radius: 20px;\n`\ninterface T {\n    id: string\n}\nconst Index = ({id}: T) => {\n    const user = useSelector(selectors.selectUserById)\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(actions.getUserById.request(id))\n    }, [dispatch])\n\n    return user && (\n        <Container>\n            <FlexDiv>\n                <Img src={user.img} alt={'student'} />\n                <Username>{user.name}'s documents list</Username>\n            </FlexDiv>\n        </Container>\n    );\n}\n\nexport default Index;\n","export default __webpack_public_path__ + \"static/media/circleOrange.d68d311a.svg\";","export default __webpack_public_path__ + \"static/media/circleGreen.d65937db.svg\";","export default __webpack_public_path__ + \"static/media/circleBlue.d2bd7786.svg\";","import styled from \"styled-components\";\nimport {Button, Form, Input} from \"antd\";\nimport Orange from \"../../static/images/circleOrange.svg\";\n\nconst StyledDiv = styled.div`\n  background: linear-gradient(#FCFCFD, #6EC1E4);\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst StyledForm = styled(Form)`\n  position: relative;\n  width: 100%;\n  box-shadow: 0 24px 56px 0 rgba(5, 57, 236, 0.04);\n  background-color: #FFFFFF99;\n  padding: 2rem 1rem;\n  border-radius: 5px;\n  -webkit-box-shadow: 0 24px 56px 0 rgba(5, 57, 236, 0.04);\n  -moz-box-shadow: 0 24px 56px 0 rgba(5, 57, 236, 0.04);\n  z-index: 1;\n`;\n\nconst CircleGreenDiv = styled.div`\n  position: absolute;\n  bottom: -200px;\n  left: 40px;\n`\n\nconst CircleBlueDiv = styled.div`\n  position: absolute;\n  top: -200px;\n  left: -200px;\n    //background-image: url(${Orange});\n`\n\nconst CircleOrangeDiv = styled.div`\n  position: absolute;\n  bottom: -25px;\n  right: -25px;\n`\n\nconst Div = styled.div`\n  width: 25%;\n  @media only screen and (max-width: 1280px) {\n    width: 40%;\n  }\n  @media only screen and (max-width: 960px) {\n    width: 50%;\n  }\n  @media only screen and (max-width: 600px) {\n    width: 90%;\n  }\n  position: relative;\n`\n\nconst StyledInput = styled(Input)`\n  height: 2.5rem;\n  border-radius: 5px;\n  padding: 2px 5px;\n`\n\nconst StyledButton = styled(Button)`\n  background-color: #6EC1E4;\n`\nexport {\n    StyledDiv,\n    StyledForm,\n    CircleGreenDiv,\n    CircleBlueDiv,\n    CircleOrangeDiv,\n    Div,\n    StyledInput,\n    StyledButton\n}","import React from \"react\";\r\nimport {Form} from 'antd';\r\nimport {auth} from '../../adapters/helpers';\r\nimport {LockOutlined, UserOutlined} from '@ant-design/icons';\r\nimport Orange from '../../static/images/circleOrange.svg'\r\nimport Green from '../../static/images/circleGreen.svg'\r\nimport Blue from '../../static/images/circleBlue.svg'\r\nimport {\r\n    CircleBlueDiv,\r\n    CircleGreenDiv,\r\n    CircleOrangeDiv,\r\n    Div,\r\n    StyledButton,\r\n    StyledDiv,\r\n    StyledForm,\r\n    StyledInput\r\n} from './styles'\r\n\r\nconst SignIn = () => {\r\n    const onFinish = async (values: any) => {\r\n        await auth.signInWithEmailAndPassword(values.username, values.password)\r\n    };\r\n    return (\r\n        <StyledDiv>\r\n            <Div>\r\n                <StyledForm\r\n                    name=\"normal_login\"\r\n                    className=\"login-form\"\r\n                    initialValues={{remember: true}}\r\n                    onFinish={onFinish}\r\n                >\r\n                    <Form.Item\r\n                        name=\"username\"\r\n                        rules={[{required: true, message: 'Please input your Username!'}]}\r\n                    >\r\n                        <StyledInput\r\n                            type={'email'}\r\n                            prefix={<UserOutlined className=\"site-form-item-icon\"/>}\r\n                            placeholder=\"E-mail\"/>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"password\"\r\n                        rules={[{required: true, message: 'Please input your Password!'}]}\r\n                    >\r\n                        <StyledInput\r\n                            prefix={<LockOutlined className=\"site-form-item-icon\"/>}\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <StyledButton\r\n                            block\r\n                            type=\"primary\"\r\n                            htmlType=\"submit\"\r\n                            className=\"login-form-button\">\r\n                            Log in\r\n                        </StyledButton>\r\n                    </Form.Item>\r\n                </StyledForm>\r\n                <CircleOrangeDiv>\r\n                    <img src={Orange} alt={'orange'}/>\r\n                </CircleOrangeDiv>\r\n                <CircleGreenDiv>\r\n                    <img src={Green} alt={'blue'}/>\r\n                </CircleGreenDiv>\r\n                <CircleBlueDiv>\r\n                    <img src={Blue} alt={'green'}/>\r\n                </CircleBlueDiv>\r\n            </Div>\r\n        </StyledDiv>\r\n    )\r\n}\r\n\r\nexport default SignIn\r\n","import {auth} from \"../../adapters/helpers\";\r\nimport React from \"react\";\r\nimport {Button, Tooltip} from \"antd\";\r\nimport {LogoutOutlined} from \"@ant-design/icons\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {actions} from '../../modules/Auth';\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledButton = styled(Button)`\r\n  padding: 0 1rem;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n`\r\n\r\nconst SignOut = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const signOut = () => {\r\n        auth.signOut().then(() =>\r\n            dispatch(actions.user.remove())\r\n        ).catch((e) => console.log(e))\r\n    }\r\n    return (\r\n        <Tooltip title=\"გამოსვლა\">\r\n            <StyledButton onClick={signOut} icon={<LogoutOutlined/>}/>\r\n        </Tooltip>\r\n    )\r\n}\r\n\r\nexport default SignOut\r\n","import React, {useMemo} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {Badge, Button, Input, Space, Tooltip} from 'antd';\r\nimport {useMessagesStream} from '../../adapters/documents'\r\nimport {HomeOutlined, NotificationOutlined, ProfileOutlined} from '@ant-design/icons';\r\nimport SignOut from '../SignOut';\r\nimport AddModal from \"../students/add\";\r\nimport {actions} from '../../modules/Users'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useLocation, Link} from \"react-router-dom\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst StyledSearch = styled(Search)`\r\n  min-width: 200px;\r\n  input:focus {\r\n    min-width: 500px;\r\n  }\r\n`\r\n\r\nconst HeaderContainer = styled.div`\r\n    height: 4rem;\r\n    background-color: #212738;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 10px 20px;\r\n    text-transform: uppercase;\r\n    box-shadow: 0 0 20px 0 rgba(69, 90, 100, .9);\r\n`;\r\n\r\nconst Actions = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  gap: .5rem\r\n`\r\nconst LeftSide = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  gap: .5rem\r\n`\r\nconst Span = styled.span`\r\n  font-weight: 500;\r\n  font-size: 1.25rem;\r\n  color: rgba(228, 204, 255, 0.64);\r\n`\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n    const onSearch = (value: string) => {\r\n        dispatch(actions.get.request({\r\n            limit: 25,\r\n            filterStr: value\r\n        }))\r\n    }\r\n    const {pathname} = useLocation()\r\n    \r\n    const renderType = useMemo(() => pathname.includes('documents'), [pathname])\r\n    console.log(renderType,  pathname.includes('documents'), pathname);\r\n    const pendings = useMessagesStream()\r\n\r\n    return (\r\n        <HeaderContainer>\r\n            <LeftSide>\r\n                <Link to={'/'}>\r\n                    <Span>სტუდენტის პორტალი</Span>\r\n                </Link>\r\n                <Link to={'/'}>\r\n                    <Button\r\n                        type={renderType ? 'link' : 'primary'} ghost icon={<HomeOutlined />}>\r\n                        მთავარი\r\n                    </Button>\r\n                </Link>\r\n                <Link to={'/documents'}>\r\n                    <Button type={renderType ? 'primary':'link'} ghost icon={<ProfileOutlined />}>\r\n                        დოკუმენტები\r\n                    </Button>\r\n                </Link>\r\n            </LeftSide>\r\n            <Space>\r\n                <Actions>\r\n                    <StyledSearch placeholder=\"იპოვე სტუდენტი (სახელით, ელ. ფოსტით, კორპუსით ან პირადი ნომრით)\" onSearch={onSearch} enterButton />\r\n                    <AddModal/>\r\n                    <Tooltip title=\"დოკუმენტები\" placement=\"bottom\">\r\n                        <Link to={'/documents'}>\r\n                            <Button>\r\n                                <Badge count={pendings?.length}>\r\n                                    <NotificationOutlined />\r\n                                </Badge>\r\n                            </Button>\r\n                        </Link>\r\n                    </Tooltip>\r\n                    <SignOut />\r\n                </Actions>\r\n            </Space>\r\n        </HeaderContainer>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Header\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {HeartTwoTone} from '@ant-design/icons';\r\n\r\nconst FooterContainer = styled.div`\r\n  height: 4rem;\r\n  background-color: transparent;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  padding: 10px 20px;\r\n`;\r\n\r\nconst A = styled.a`\r\n  text-decoration: none;\r\n  margin-right: .5rem;\r\n  font-weight: 500;\r\n  font-size: 1.25rem;\r\n  color: rgba(235, 47, 150, .3);\r\n`\r\n\r\nconst Header = () => {\r\n    return (\r\n        <FooterContainer>\r\n            <div>\r\n                <A href={'https://github.com/dunkman32/student-campus'}>\r\n                    made by noZZa, Givi & Lasha with\r\n                </A>\r\n                <HeartTwoTone style={{fontSize: '1.25rem',position: 'relative', top: 1}} twoToneColor=\"#eb2f96\"/>\r\n            </div>\r\n        </FooterContainer>\r\n    )\r\n}\r\n\r\n\r\nexport default Header\r\n","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {BrowserRouter as Router, Route, Switch,} from 'react-router-dom';\r\nimport Main from '../components/main'\r\nimport Chat from '../components/chat'\r\nimport Documents from '../components/documents'\r\nimport ListById from '../components/documents/listById'\r\nimport SignIn from '../components/SignIn'\r\nimport {auth} from '../adapters/helpers'\r\nimport {readUserById} from '../adapters/users'\r\nimport {actions, selectors} from '../modules/Auth';\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst Components = () => {\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(selectors.selectUser)\r\n    useEffect(() => {\r\n        auth.onAuthStateChanged((user: any) => {\r\n            if(user) {\r\n                const tmpUser = {\r\n                    ...user.providerData[0],\r\n                    id: user.uid\r\n                }\r\n                readUserById(user.uid).then((r) => {\r\n                    dispatch(actions.user.add({\r\n                        ...tmpUser,\r\n                        ...r.data()\r\n                    }))\r\n                }).catch((e) => console.log(e))\r\n            }\r\n        });\r\n    }, [dispatch]);\r\n\r\n\r\n    return user ? (\r\n            <Router>\r\n                <Header/>\r\n                <Switch>\r\n                    <Route path=\"/\" exact>\r\n                        <Main/>\r\n                    </Route>\r\n                    <Route path=\"/documents\" exact component={Documents} />\r\n                    <Route path=\"/documents/:id\" exact component={ListById} />\r\n                    <Route path=\"/chat\" exact component={Chat} />\r\n                </Switch>\r\n                <Footer />\r\n            </Router>\r\n        ) :\r\n        (<SignIn/>)\r\n}\r\n\r\nexport default Components;\r\n","import React from 'react';\nimport {Provider} from 'react-redux'\nimport './App.css';\nimport Components from './components'\nimport {persistor, store} from './redux/store'\nimport {PersistGate as BasePersistGate} from 'redux-persist/integration/react'\nimport 'antd/dist/antd.css';\n\nconst App = () => {\n    return (\n        <Provider store={store}>\n            <BasePersistGate persistor={persistor}>\n                <Components />\n            </BasePersistGate>\n        </Provider>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import reducer from './reducers'\nimport * as actions from './actions'\nimport * as constants from './constants'\nimport * as selectors from './selectors'\nconst moduleName = 'Auth/User'\n\nexport {\n  moduleName,\n  reducer,\n  actions,\n  selectors,\n  constants,\n}\n","import {firestore, auth, storage} from \"./helpers\"\nimport {useCollectionData} from 'react-firebase-hooks/firestore';\nimport {omit} from 'lodash'\n\nconst COLLECTION = firestore.collection(\"students\")\n\nexport const students = () => {\n    return COLLECTION\n}\nexport const readUserById = (id: string) => {\n    return COLLECTION.doc(id).get()\n}\n\nexport var totalSize: Number;\nCOLLECTION.get().then(querySnapshot => {      \n    totalSize = querySnapshot.size\n});\n\ninterface DataType {\n    id: string\n    uid: string,\n    text: string,\n    photo: string,\n    createdAt: number,\n    displayName: string,\n}\n\nexport const useStudentsStream = (limit: number = 25, first: any, last: any) => {\n    const query = COLLECTION.orderBy('createdAt');\n    console.log(last, first);\n    if (last) {\n        query.startAfter(last.createdAt)\n    }\n    if (first) {\n        query.endBefore(first.createdAt)\n    }\n    const data = useCollectionData<DataType>(query.limit(limit), {idField: 'id'})[0]\n    return {\n        rows: data,\n        first: data && data[0],\n        last: data && data[data.length - 1]\n    }\n}\n\nexport const next = (limit: number = 25, last: any = null) => {\n    console.log('next')\n    return COLLECTION.orderBy('createdAt')\n        .startAfter(last.createdAt)\n        .limit(limit)\n        .get()\n}\n\nexport const prev = (limit: number = 25, first: any = null) => {\n    console.log('prev');\n    return COLLECTION.orderBy('createdAt')\n        .endBefore(first.createdAt)\n        .limitToLast(limit)\n        .get()\n}\nexport const take = async (limit: number = 25, filterStr: string = '') => {\n    const trimmed = filterStr.trim()\n    if(trimmed) {\n        const name = COLLECTION\n            .where('name', '==', trimmed)\n            .get()\n        const idNumber = COLLECTION\n            .where('idNumber', '==', trimmed)\n            .get()\n        const email = COLLECTION\n            .where('email', '==', trimmed)\n            .get()\n        const campus = COLLECTION\n            .where('campus', '==', trimmed)\n            .get()\n\n        const [A, B, C, D] = await Promise.all([name, idNumber, email, campus]);\n        return [...A.docs, ...B.docs, ...C.docs, ...D.docs]\n    }\n    else {\n        return COLLECTION\n            .orderBy('createdAt')\n            .limit(limit)\n            .get()\n    }\n}\n\n\nexport const takeUserById = (id: string) => {\n    return COLLECTION.doc(id).get().then((doc) => doc.data()).catch(() => {})\n}\n\ninterface Students {\n    name: string,\n    email: string,\n    idNumber: string,\n    no: number,\n    campus: string,\n    birth: string,\n    createdAt: number,\n    file: any\n}\n\nexport const takeImg = (id: string) => {\n    const starsRef = storage.ref(`students/${id}.jpg`);\n// Get the download URL\n    return starsRef.getDownloadURL()\n        .then((url) => {\n            return url\n            // Insert url into an <img> tag to \"download\"\n        })\n}\n\n\nexport const addUserWithEmail = async (student: Students) => {\n    try {\n        const {user}: any = await auth.createUserWithEmailAndPassword(student.email, student.idNumber)\n        const uid = user.uid\n        await storage.ref().child(`students/${uid}.jpg`).put(student.file)\n        const img = await takeImg(uid)\n        const userOBJ = {\n            ...omit(student, ['file']),\n            uid,\n            role: 'student',\n            img\n        }\n        const savedUsr = await COLLECTION.doc(uid).set(userOBJ)\n        console.log(img, savedUsr, 'auth')\n        return savedUsr\n    } catch (e) {\n        console.log(e)\n    }\n};\n\nexport const uploadFile = (name: string, file: any) => {\n    return storage.ref().child(`students/${name}.jpg`).put(file)\n};\n\nexport const addStudent = (data: Students) => {\n    return COLLECTION.add(data)\n}\n\nexport const removeFilm = (id: string) => {\n    return COLLECTION.doc(id).delete()\n}\n\nexport const updateStudent = (data: any) => {\n    let prod = COLLECTION.doc(data.uid)\n    return prod.update(data)\n}\n\n\n"],"sourceRoot":""}